* TODO backlog sprint-A-2024-09-23
** DONE Вкладку rulkes змінюємо назву "Налаштування" 
CLOSED: [2024-09-26 Thu 13:49]
** DONE win exe
CLOSED: [2024-09-26 Thu 12:59]
*** pyinstaller arch linux
cmd /c "sontex-env\Scripts\activate & pyinstaller main.py"
*** move file to win
**** usb
**** samba
***** help
open shered file on arch linux from windows
samba on arch linux from windows

***** Re: [SOLVED] Shares between Windows and Arch

Here is my smb.conf file:

[global]
server string = File Server
workgroup = LITTLEBIGPLANET
security = share
include = /etc/samba/smbshared.conf

wins support = no

And here is my smbshared.conf (that smb.conf links to):

[Shared] ; user="jlacroix"
        force user = jlacroix
        path = /home/jlacroix/Shared
        writable = yes
        public = yes

[Music] ; user="jlacroix"
        force user = jlacroix
        path = /home/jlacroix/Music
        writable = no
        public = yes

[Images] ; user="jlaroix"
        force user = jlacroix
        path = /mnt/images/
        writable = yes
        public = yes

[Pictures] ; user="jlacroix"
        force user = jlacroix
        path = /home/jlacroix/Pictures/Memories
        writable = no
        public = yes

It works flawlessly for me. Most of it above should be self
explanatory. To browse shares, under Gnome you just go to > Places
> Network > Workgroupname (the name of my workgroup is
"LITTLEBIGPLANET"). I don't use KDE, so for me I just click on the K
menu and then "Network" and then "Samba Shares" and they should
show up under the workgroup name.

With using that config, all Windows machines I work on can access
Linux shares if needbe.

Edit: It goes without saying, but if you didn't already know, the
Windows machines should have the same workgroup name as well.
I think it will still work without having the same name but
sometimes not.

Last edited by jlacroix (2010-10-15 15:01:45)

Offline

***** myo
# This one is useful for people to share files
#======================= Global Settings =====================================
[global]
	server string = File Server
	workgroup = freeman
	security = share
	wins support = no

#============================ Share Definitions ==============================
[tmp]
  comment = Temporary file space
  path = /tmp
  read only = no
  public = yes

[Dev] 
	comment = buyn dev files
	force user = buyn
	path = /home/buyn/Dev
	writable = yes
	public = yes
***** Installation
[[https://wiki.archlinux.org/title/Install][Install]] the [[https://archlinux.org/packages/?name=samba][samba]] package. 
sudo pacman -S samba

#+begin_src elisp
(find-file-other-frame "/sudo::/etc/samba/smb.conf")
#+end_src

#+RESULTS:
: #<buffer smb.conf>

#+begin_src elisp
(find-file-other-frame "/etc/samba/smb.conf")
#+end_src

#+RESULTS:
: #<buffer smb.conf>

Samba is configured in the /etc/samba/smb.conf configuration file,
which is extensively documented in [[https://man.archlinux.org/man/smb.conf.5][smb.conf(5)]]. 

Because the [[https://archlinux.org/packages/?name=samba][samba]] package does not provide this file, one needs to
create it before starting smb.service. 

A documented example as in smb.conf.default from the [[https://git.samba.org/samba.git/?p=samba.git;a=blob_plain;f=examples/smb.conf.default;hb=HEAD][Samba git
repository]] may be used to setup /etc/samba/smb.conf. 

***** exampl
#+begin_src python
# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options (perhaps too
# many!) most of which are not shown in this example
#
# For a step to step guide on installing, configuring and using samba,
# read the Samba-HOWTO-Collection. This may be obtained from:
#  http://www.samba.org/samba/docs/Samba-HOWTO-Collection.pdf
#
# Many working examples of smb.conf files can be found in the
# Samba-Guide which is generated daily and can be downloaded from:
#  http://www.samba.org/samba/docs/Samba-Guide.pdf
#
# Any line which starts with a ; (semi-colon) or a # (hash)
# is a comment and is ignored. In this example we will use a #
# for commentry and a ; for parts of the config file that you
# may wish to enable
#
# NOTE: Whenever you modify this file you should run the command "testparm"
# to check that you have not made any basic syntactic errors.
#
#======================= Global Settings =====================================
[global]

# workgroup = NT-Domain-Name or Workgroup-Name, eg: MIDEARTH
   workgroup = MYGROUP

# server string is the equivalent of the NT Description field
   server string = Samba Server

# Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller".
#
# Most people will want "standalone server" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
   server role = standalone server

# This option is important for security. It allows you to restrict
# connections to machines which are on your local network. The
# following example restricts access to two C class networks and
# the "loopback" interface. For more examples of the syntax see
# the smb.conf man page
;   hosts allow = 192.168.1. 192.168.2. 127.

# Uncomment this if you want a guest account, you must add this to /etc/passwd
# otherwise the user "nobody" is used
;  guest account = pcguest

# this tells Samba to use a separate log file for each machine
# that connects
   log file = /usr/local/samba/var/log.%m

# Put a capping on the size of the log files (in Kb).
   max log size = 50

# Specifies the Kerberos or Active Directory realm the host is part of
;   realm = MY_REALM

# Backend to store user information in. New installations should
# use either tdbsam or ldapsam. smbpasswd is available for backwards
# compatibility. tdbsam requires no further configuration.
;   passdb backend = tdbsam

# Using the following line enables you to customise your configuration
# on a per machine basis. The %m gets replaced with the netbios name
# of the machine that is connecting.
# Note: Consider carefully the location in the configuration file of
#       this line.  The included file is read at that point.
;   include = /usr/local/samba/lib/smb.conf.%m

# Configure Samba to use multiple interfaces
# If you have multiple network interfaces then you must list them
# here. See the man page for details.
;   interfaces = 192.168.12.2/24 192.168.13.2/24

# Where to store roving profiles (only for Win95 and WinNT)
#        %L substitutes for this servers netbios name, %U is username
#        You must uncomment the [Profiles] share below
;   logon path = \\%L\Profiles\%U

# Windows Internet Name Serving Support Section:
# WINS Support - Tells the NMBD component of Samba to enable it's WINS Server
;   wins support = yes

# WINS Server - Tells the NMBD components of Samba to be a WINS Client
#	Note: Samba can be either a WINS Server, or a WINS Client, but NOT both
;   wins server = w.x.y.z

# WINS Proxy - Tells Samba to answer name resolution queries on
# behalf of a non WINS capable client, for this to work there must be
# at least one	WINS Server on the network. The default is NO.
;   wins proxy = yes

# DNS Proxy - tells Samba whether or not to try to resolve NetBIOS names
# via DNS nslookups. The default is NO.
   dns proxy = no

# These scripts are used on a domain controller or stand-alone
# machine to add or delete corresponding unix accounts
;  add user script = /usr/sbin/useradd %u
;  add group script = /usr/sbin/groupadd %g
;  add machine script = /usr/sbin/adduser -n -g machines -c Machine -d /dev/null -s /bin/false %u
;  delete user script = /usr/sbin/userdel %u
;  delete user from group script = /usr/sbin/deluser %u %g
;  delete group script = /usr/sbin/groupdel %g


#============================ Share Definitions ==============================
[homes]
   comment = Home Directories
   browsable = no
   writable = yes

# Un-comment the following and create the netlogon directory for Domain Logons
; [netlogon]
;   comment = Network Logon Service
;   path = /usr/local/samba/lib/netlogon
;   guest ok = yes
;   writable = no
;   share modes = no


# Un-comment the following to provide a specific roving profile share
# the default is to use the user's home directory
;[Profiles]
;    path = /usr/local/samba/profiles
;    browsable = no
;    guest ok = yes


# NOTE: If you have a BSD-style print system there is no need to
# specifically define each individual printer
[printers]
   comment = All Printers
   path = /usr/spool/samba
   browsable = no
# Change 'guest ok' from 'no' to 'yes' to allow the 'guest account' user to print
   guest ok = no
   writable = no
   printable = yes

# This one is useful for people to share files
;[tmp]
;   comment = Temporary file space
;   path = /tmp
;   read only = no
;   public = yes

# A publicly accessible directory, but read only, except for people in
# the "staff" group
;[public]
;   comment = Public Stuff
;   path = /home/samba
;   public = yes
;   writable = no
;   printable = no
;   write list = @staff

# Other examples.
#
# A private printer, usable only by fred. Spool data will be placed in fred's
# home directory. Note that fred must have write access to the spool directory,
# wherever it is.
;[fredsprn]
;   comment = Fred's Printer
;   valid users = fred
;   path = /homes/fred
;   printer = freds_printer
;   public = no
;   writable = no
;   printable = yes

# A private directory, usable only by fred. Note that fred requires write
# access to the directory.
;[fredsdir]
;   comment = Fred's Service
;   path = /usr/somewhere/private
;   valid users = fred
;   public = no
;   writable = yes
;   printable = no

# a service which has a different directory for each machine that connects
# this allows you to tailor configurations to incoming machines. You could
# also use the %U option to tailor it by user name.
# The %m gets replaced with the machine name that is connecting.
;[pchome]
;  comment = PC Directories
;  path = /usr/pc/%m
;  public = no
;  writable = yes

# A publicly accessible directory, read/write to all users. Note that all files
# created in the directory by users will be owned by the default user, so
# any user with access can delete any other user's files. Obviously this
# directory must be writable by the default user. Another user could of course
# be specified, in which case all files would be owned by that user instead.
;[public]
;   path = /usr/somewhere/else/public
;   public = yes
;   only guest = yes
;   writable = yes
;   printable = no

# The following two entries demonstrate how to share a directory so that two
# users can place files there that will be owned by the specific users. In this
# setup, the directory should be writable by both users and should have the
# sticky bit set on it to prevent abuse. Obviously this could be extended to
# as many users as required.
;[myshare]
;   comment = Mary's and Fred's stuff
;   path = /usr/somewhere/shared
;   valid users = mary fred
;   public = no
;   writable = yes
;   printable = no
;   create mask = 0765


#+end_src

***** start
To provide basic file sharing through SMB, [[https://wiki.archlinux.org/title/Enable/start][enable/start]]
smb.service. See [[https://man.archlinux.org/man/smbd.8][smbd(8)]] for details. 
start smb.service

Then, restart smb.service. 
# systemctl start example.service
sudo systemctl restart smb.service

***** NetBIOS
If you want to make your server accessible via NetBIOS host name,
set the desired name in the netbios name option in smb.conf and
[[https://wiki.archlinux.org/title/Enable/start][enable/start]] nmb.service. See [[https://man.archlinux.org/man/nmbd.8][nmbd(8)]] for details. 

***** user
shaer user
# smbpasswd -a samba_user
sudo smbpasswd -a buyn

***** link
https://wiki.archlinux.org/title/Samba
https://www.samba.org/samba/docs/
https://www.oregontechsupport.com/samba.html
***** The three services listed are: 

	* samba: for sharing files with others.
	* samba-client: to browse shares on other machines on the
 network.
	* samba-dc: for Samba/Active Directory domain controller.
***** 
**** 

*** install pyinstal
*** friz

pip freeze > requirements.txt

*** activate
install python
sontex-env\Scripts\activate.bat

python -m venv sontex-env

D:\Dev\sontex\build\ 
D:\Dev\sontex\build\sontex-env\Scripts\activate.bat
sontex-env\Scripts\activate.bat
#+begin_src shell
tutorial-env\Scripts\activate.bat
#+end_src
On Unix or MacOS, run:
#+begin_src shell
source tutorial-env/bin/activate
#+end_src
*** unfriz
pip install -r requirements.txt

*** test on windows

** передача параметров
если вкладка отсутвует
берётся из пайтон импорта
** DONE сделать фаили Инпут
CLOSED: [2024-09-26 Thu 13:49]
раставить по порядку
проименовать из дебаг файла или ис

** проверить по пункто - сделать екзешни
*** pyinstaller
*** разобрать в том что сейчас в папке билд
*** сдлеть виртуал 
*** установить всё что нужно 
*** сделать фаил запуска из виртуала 
*** попробывать сгенерить экзешник на прямую  
*** если не получилось начинаем копать
*** фаил билда должен вручную копировать
фаил запуска
папку веба
и создовать папку с дата файлов
*** кмд орг
написать отдельный кмд для делания 
екзешника
*** сгенерить кмд 
*** запустить протестить 
*** сделать раздел делания екзкшника 
вроде там всё готово итак
просто запустить фаил
автоматизировать процес
сделать авто копирование исходников
и папок
*** сделать фаил апдейта 
копирует все пйтоны
веб
** логотипы должны вести на сайты компаний
** DONE Сделать новый спринт
CLOSED: [2024-09-23 Mon 07:35]

* DONE backlog sprint-A-2024-09-10
CLOSED: [2024-09-12 Thu 15:34]
** DONE Перереманая отключения владки рулзов в отчёте
CLOSED: [2024-09-12 Thu 03:56]
*** сделать по аналогии с переменоной репорта
** DONE Перевеод строки в логе
CLOSED: [2024-09-12 Thu 15:34]
Сергей Радригес Змей, [10.09.2024 15:24]
Ласкаво просимо! Почнемо програму.

Сергей Радригес Змей, [10.09.2024 15:25]
Замінити на горі Sontex на Програма розрахунку

Сергей Радригес Змей, [10.09.2024 15:25]
Показники пристроїв та файл звіту з великої літери.

Сергей Радригес Змей, [10.09.2024 15:26]
Всі кнопки з великої літери.
** DONE Замінити на горі Sontex на Програма розрахунку
CLOSED: [2024-09-12 Thu 15:34]
Замінити на горі Sontex на Програма розрахунку
** DONE округлять знчения на основе переменной
CLOSED: [2024-09-12 Thu 15:27]
сейчас они похоже округляются просто хардкодно до 2х значений после запятой
** DONE большие буквы для всех кнопок
CLOSED: [2024-09-12 Thu 15:34]
** DONE убедится что правило округляет
CLOSED: [2024-09-11 Wed 15:17]
округляет на основе значения глобола
*** DONE Проверить наличие переменой глобальной
CLOSED: [2024-09-11 Wed 12:13]
*** DONE посмотреть как округляется сумарное
CLOSED: [2024-09-11 Wed 14:39]
*** DONE сделать по аналогии правило
CLOSED: [2024-09-11 Wed 14:39]
*** DONE найти понять как заполняется расчёт
CLOSED: [2024-09-11 Wed 14:39]
*** DONE переделать для расчёта
CLOSED: [2024-09-11 Wed 14:39]
*** Тест output

** CANCELED ruls симбол
CLOSED: [2024-09-12 Thu 15:34]
*** тажа ошибка в файле Теста
*** Добавить асерт ввыбраном поле
*** иправить ошибку
** DONE виртуальные счёчики
CLOSED: [2024-09-12 Thu 03:20]
отсутсвуют в полях созданых по правилам
*** Добавить асерт ввыбраном поле
*** иправить ошибку
** DONE Совместить цифры
CLOSED: [2024-09-11 Wed 11:40]
*** DONE Проверить цифры в файлах сергия
CLOSED: [2024-09-10 Tue 23:27]
проверить что в "импуте" теже цифры что в дебаге
*** DONE сделать копию папки програмы
CLOSED: [2024-09-11 Wed 00:04]
для запуска чтоб были правельные цифры
*** DONE сделать инпут фаил
CLOSED: [2024-09-11 Wed 01:21]
*** DONE сгенерить оутпут фаил
CLOSED: [2024-09-11 Wed 09:49]
*** DONE сравнить результаты
CLOSED: [2024-09-11 Wed 09:49]
*** подченить сводимость цифр
*** сделать инпут фаил с тойже последовательностью
* DONE backlog sprint-A-2024-09-06
CLOSED: [2024-09-10 Tue 18:17]
** DONE создание и оформление стадии альфа
CLOSED: [2024-09-07 Sat 20:46]
** DONE посмотреть выполняются ли тесты
CLOSED: [2024-09-10 Tue 18:13]
*** DONE открыть кмд фаил рантестов
CLOSED: [2024-09-09 Mon 21:09]
*** DONE выпонить из него команду
CLOSED: [2024-09-09 Mon 21:09]
*** DONE устновить зависимости
CLOSED: [2024-09-09 Mon 21:09]
*** DONE добавить зависисмотси в орг сонтекс
CLOSED: [2024-09-09 Mon 21:09]
*** сделать его шелл аналог
*** DONE err
CLOSED: [2024-09-09 Mon 18:58]
ImportError: Missing optional dependency 'openpyxl'.  Use pip or conda to install openpyxl.
*** sh
**** cmd
@echo off
:start
python -m unittest
pause
cls
goto :start
**** new sh
cd /home/buyn/Dev/Python/Sontex/Src/
source sontex-env/bin/activate
:results output silent
#+begin_src elisp  :dir /home/buyn/Dev/Python/Sontex/Src/
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src

(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
*** DONE jedi
CLOSED: [2024-09-10 Tue 01:58]
jedi:install-server
*** run tests
python -m unittest
*** CANCELED test-suffix
CLOSED: [2024-09-10 Tue 01:58]
projectile--test-name-for-impl-name: Cannot determine a test file name, one of "test-suffix" or "test-prefix" must be set for project type ‘generic’
projectile python test name "test-prefix" 

(defun my-test-prefix (project-type) "test_")


(defun projectile-test-suffix (project-type)
  "Find default test files suffix based on PROJECT-TYPE."
  (cond
   ((member project-type '(rails-rspec ruby-rspec)) "_spec")
   ((member project-type '(rails-test ruby-test lein-test go)) "_test")
   ((member project-type '(scons)) "test")
   ((member project-type '(maven symfony)) "Test")
   ((member project-type '(gradle grails)) "Spec")))

	 
(projectile-register-project-type 'npm '("package.json")
                                  :project-file "package.json"
				  :compile "npm install"
				  :test "npm test"
				  :run "npm start"
				  :test-suffix ".spec")

What this does is:

1 add your own type of project, in this case npm package.

2 add a list of files and/or folders in a root of the project that helps
 to identify the type, in this case it is only package.json. This can
 also be a function which takes a project root as argument and
 verifies whether that directory has the correct project structure for
 the type.

3 add project-file, which is typically the primary project configuration
 file. In this case that’s package.json. The value can contain
 wildcards and/or be a list containing multiple project files to look
 for.

4 add compile-command, in this case it is npm install.

5 add test-command, in this case it is npm test.

6 add run-command, in this case it is npm start.

7 add test files suffix for toggling between implementation/test
 files, in this case it is .spec, so the implementation/test file pair
 could be service.js/service.spec.js for example.

https://docs.projectile.mx/projectile/projects.html

.projectile test-prefix python


(projectile-register-project-type 'my-python '("main.py")
                                  :project-file "main.py"
                                  :compile "python -m "
                                  :test "python test"
                                  :test-prefix "test_"
                                  :test-suffix"_test")

																	
(projectile-register-project-type
					'npm '("package.json")
					:project-file "package.json"
				  :compile "npm install"
				  :test "npm test"
				  :run "npm start"
				  :test-suffix ".spec")
*** error 
..[2]
/home/buyn/Dev/Python/Sontex/Src/rules.py:35: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
  target_index = int(tmp_int)
** запустить тестовый вариант
*** на основе файлов из тестов
определить на чём он генереит тесты
*** и выполнить тоже самое из меню
** записать инструкцию по названиям файлов
*** записать получившийся результат словами в орг
** сделать инструкцию
чтоб было понятно как запускать если потом понадобится
либо сделать инструкцию для клиента через чат жпт
** просмотреть файлы Сергея
*** установить опен офис
*** открыть файлы
*** понять как там много работы
** Запустить с файлом Сергея
*** отредоктировать файлы для репорта
*** запустить
*** профит
** изменить текст лога
на что на украинском
* SRC files
** main
*** main.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "/home/buyn/Dev/Python/Sontex/Src/main.py")
#+end_src

#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/main.py")
#+end_src
*** test_main.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/test_main.py")
#+end_src
** appart_values
*** appart_values.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/appart_values.py")
#+end_src
*** test_appart_values.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/test_appart_values.py")
#+end_src
** counter_values
*** counter_values.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/counter_values.py")
#+end_src
*** test_counter_values.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/test_counter_values.py")
#+end_src
** rules
*** rules.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "/home/buyn/Dev/Python/Sontex/Src/rules.py")
#+end_src
*** test_rules.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "/home/buyn/Dev/Python/Sontex/Src/test_rules.py")
#+end_src
** global_values.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "/home/buyn/Dev/Python/Sontex/Src/global_values.py")
#+end_src
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/global_values.py")
** winmain
*** winmain.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/winmain.py")
#+end_src
*** test_winmain.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/test_winmain.py")
#+end_src
** .projectile
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/.projectile")
#+end_src
** sandbox
*** sandbox.org
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/sandbox.org")
#+end_src
*** sandbox.py
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/sandbox.py")
#+end_src
** Eel files
*** index.html
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/web/index.html")
#+end_src
*** script.js
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/web/script.js")
#+end_src
*** style.css : 
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/web/style.css")
#+end_src
** arhiv
** org translate 
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "D:/Development/version-control/GitHub/Zmei/Sontex/Src/translate.org")
#+end_src
* data files
** build path
(ranger "/home/buyn/Dev/Python/Sontex/raw-files/")
/home/buyn/Dev/Python/Sontex/raw-files/
** build files 2024-09-11
/home/buyn/Dev/Python/Sontex/raw-files/input.xlsx
/home/buyn/Dev/Python/Sontex/raw-files/output.xlsx
/home/buyn/Dev/Python/Sontex/raw-files/debag_2024.xlsx
** test run
/home/buyn/Dev/Python/Sontex/Src/Data_files/test.xlsx
/home/buyn/Dev/Python/Sontex/Src/Data_files/output.xlsx
* Орг лог
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "~/Dropbox/Office/Progects/Zmei/Sontex/Org-Log/2024-09-06-Sontex-alfa-log.org")
#+end_src
* macroses 
** calc-all : 
#+begin_src emacs-lisp :results output silent
(load-file "~/keymac/calc-all.el")
#+end_src
#+begin_src emacs-lisp :results output silent
(fset 'calc-all
   (kmacro-lambda-form [?\C-u ?\C-c ?*] 0 "%d"))
#+end_src
#+begin_src emacs-lisp :results output silent
(global-set-key (kbd "<f5>") 'calc-all)
#+end_src
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "~/keymac/calc-all.el")
#+end_src
** convert-ru-point : 
#+begin_src emacs-lisp :results output silent
(load-file "~/keymac/convert-ru-point.el")
#+end_src
#+begin_src emacs-lisp :results output silent
(fset 'convert-ru-point
   (kmacro-lambda-form [?ð ?ð ?J ?F ?, ?r ?.] 0 "%d"))
#+end_src
#+begin_src emacs-lisp :results output silent
(global-set-key (kbd "<f6><f6>") 'convert-ru-point)
#+end_src
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "~/keymac/convert-ru-point.el")
#+end_src
** functions +-
*** new
#+begin_src emacs-lisp  :results output silent
(defun buyn-org-table-change ( value)
	(org-table-get-field nil (number-to-string (+ value (string-to-number (org-table-get-field))))))

(global-set-key (kbd "<f5>") '(lambda () (interactive)
																(buyn-org-table-change -1)
																(org-table-recalculate)))

(global-set-key (kbd "<f6>") '(lambda () (interactive)
																(buyn-org-table-change 1)
																(org-table-recalculate)))



#+end_src
*** orig
#+begin_src emacs-lisp  :results output silent
(defun my-org-table-change ( value)
	(org-table-get-field nil (number-to-string (+ value (string-to-number (org-table-get-field))))))

(defun my-org-table-decrement ()
  (interactive)
	(my-org-table-change -1))

(defun my-org-table-increment ()
  (interactive)
	(my-org-table-change 1))

(global-set-key (kbd "<f5>") 'my-org-table-decrement)
(global-set-key (kbd "<f6>") 'my-org-table-increment)
#+end_src
*** test 
|   |   |    |    |   |
| 6 | 5 |  0 |  1 |   |
|   |   | 10 |    |   |
|   |   |  3 | -5 | 0 |
|---+---+----+----+---|
|   |   |    |    |   |
|   |   |    |    |   |
|   |   |    |    |   |
|   |   |    |    |   |
|   |   |    |    |   |

* orgs
** orgs Sontex
#+begin_src emacs-lisp :results output silent
(find-file-other-frame "~/Dropbox/Office/Progects/Zmei/Sontex/Sontex.org")
#+end_src
* project comands
:PROPERTIES:
:header-args: :tangle no
:END:
** emacs src env actuv
*** eshell
#+begin_src elisp :dir /home/buyn/Dev/Python/Sontex/Src/ :results output silent
(evil-previous-line)
(org-cycle)
(delete-other-windows)
(pyvenv-activate "/home/buyn/Dev/Python/Sontex/Src/sontex-env")
(let (buffer-name-to-close (buffer-name))
				(evil-window-split)
				(eshell)
				(evil-quit)
				(switch-to-buffer-other-frame buffer-name-to-close))
#+end_src
*** comands
python -m unittest
python main.py
python -m main.py
** emacs build env actuv
*** eshell
#+begin_src elisp :dir /home/buyn/Dev/Python/Sontex/build/ :results output silent
(evil-previous-line)
(org-cycle)
(delete-other-windows)
(pyvenv-activate "/home/buyn/Dev/Python/Sontex/build/sontex-env")
(let (buffer-name-to-close (buffer-name))
				(evil-window-split)
				(eshell)
				(evil-quit)
				(switch-to-buffer-other-frame buffer-name-to-close))
#+end_src
*** comands
python -m unittest
python main.py
python -m main.py
** activate build
*** new sh
#+begin_src elisp  :dir /home/buyn/Dev/Python/Sontex/build/
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src
*** source
source sontex-env/bin/activate
cd /home/buyn/Dev/Python/Sontex/Src/
*** run main
python main.py
*** run all tests
python -m unittest
*** buyn-shell-start
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
** activate src
*** new sh
#+begin_src elisp  :dir /home/buyn/Dev/Python/Sontex/Src/
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src
*** source
source sontex-env/bin/activate
cd /home/buyn/Dev/Python/Sontex/Src/
*** buyn-shell-start
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
*** run all tests
python -m unittest
** run console in sontex activ
#+begin_src elisp :results output silent :dir /home/buyn/Dev/Python/Sontex/Src/
(buyn-shell-start "konsole -e /bin/bash --rcfile <(source sontex-env/bin/activate)")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src
source sontex-env/bin/activate
cd sontex-env
** run in eshell
*** run eshell
#+begin_src elisp :results output silent :dir /home/buyn/Dev/Python/Sontex/Src/
(evil-previous-line)
(org-cycle)
(delete-other-windows)
(let (buffer-name-to-close (buffer-name))
	(evil-window-split)
				(eshell)
				(evil-quit)
				(switch-to-buffer-other-frame buffer-name-to-close))
#+end_src
*** comannds
python main.py
python -m unittest

source sontex-env/bin/activate
cd sontex-env

** save буфер фреймы проекта
#+begin_src emacs-lisp  :results output silent
(use-package burly
 :ensure t
 ;; :config
	)
;; (burly-bookmark-frames "sontex buffers")
(burly-bookmark-frames "buffers LAST SAVE")
(bookmark-save)
#+end_src
** run eshell in org root
clj -M:dev
clojure -m cljs.main --compile my-cljs-project.core --repl
#+begin_src elisp :results output silent
(evil-previous-line)
(org-cycle)
(delete-other-windows)
(let (buffer-name-to-close (buffer-name))
				(evil-window-split)
				(eshell)
				(evil-quit)
				(switch-to-buffer-other-frame buffer-name-to-close))
#+end_src

			;; (execute-kbd-macro "A \C-m")
** run console in sontex
#+begin_src elisp :results output silent :dir /home/buyn/Dev/Python/Sontex/Src/
(buyn-shell-start "konsole")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src
source sontex-env/bin/activate
cd sontex-env
** run console in org root
#+begin_src elisp :results output silent
(buyn-shell-start "konsole")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src

** run console with command
#+begin_src elisp :results output silent
(buyn-shell-start "konsole -e /bin/bash --rcfile <(clj -M:dev)")
(evil-previous-line)
(org-cycle)
(delete-other-windows)
#+end_src

* 2024-09-06
** Necroteuch.org : 
		#+begin_src emacs-lisp :tangle yes
(find-file-other-frame "~/../Dropbox/orgs/capture/Necroteuch.org")
		#+end_src

		#+RESULTS:
		: #<buffer Necroteuch.org>

